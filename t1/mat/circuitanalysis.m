%Lab1-Circuit analysis methods                        Academic Year 2020/2021
%                                                            TCFE
%Authors:
%Joana Matos, 95799
%Ricardo Abreu, 95842
%Vasco Em√≠dio, 95856
%MEAer
close all
clear all

 %---Data generated by Python 2.7---
 printf("Data:  V, A, Ohm, S\n")
 R1 = 1.00147062639e3
 R2 = 2.0078068512e3
 R3 = 3.11269704405e3
 R4 = 4.10609573471e3 
 R5 = 3.02670672634e3
 R6 = 2.01292455078e3
 R7 = 1.02905244808e3
 Va = 5.24842063411 
 Id = 1.04086013403e-3 
 Kb = 7.21413591579e-3 
 Kc = 8.01455113996e-3 

 %---Mesh Analysis---
 printf("\n--Mesh Analysis--\n");
 Am=[R1+R3+R4,R3     ,R4         ,0;
     Kb*R3   ,Kb*R3-1,0          ,0;
     R4      ,0      ,R4+R6+R7-Kc,0;
     0       ,0      ,0          ,1];                   %matrix form
 Bm=[Va; 0; 0; Id];
 
 Im=Am\Bm;                                              %mesh currents array
 
 printf("Mesh_MTAB \n");                                %mesh table
 printf("$I_{A}$ = %g \n", Im(1));
 printf("$I_{B}$ = %g \n", Im(2));
 printf("$I_{C}$ = %g \n", Im(3));
 printf("$I_{D}$ = %g \n", Im(4));
 printf("Mesh_MEND \n\n");

 printf("It is now possible to determine:\n");
 Ic_m=Im(3);
 Vc_m=Kc*Ic_m;
 Vb_m=R3*(Im(1)+Im(2));
 Ib_m=Kb*Vb_m;
 I1=Im(1);
 I2=Im(2);
 I3=Im(1)+Im(2);
 I4=Im(1)+Im(3);
 I5=Im(2)-Im(4);
 I6=Im(3);
 I7=Im(3);
 
 printf("ValM_MMTAB\n");                               %Vb, Ib, Vc, Ic
 printf("$V_{b}$ = %g \n", Vb_m);
 printf("$I_{b}$ = %g \n", Ib_m);
 printf("$V_{c}$ = %g \n", Vc_m);
 printf("$I_{c}$ = %g \n", Ic_m);
 printf("$I_{R1}$ = %g \n", I1);
 printf("$I_{R2}$ = %g \n", I2);
 printf("$I_{R3}$ = %g \n", I3);
 printf("$I_{R4}$ = %g \n", I4);
 printf("$I_{R5}$ = %g \n", I5);
 printf("$I_{R6}$ = %g \n", I6);
 printf("$I_{R7}$ = %g \n", I7);
 printf("ValM_MMEND \n");

 %---Node Analysis---
 printf("\n--Node Analysis--\n");
 G1=1/R1; G2=1/R2; G3=1/R3; G4=1/R4; G5=1/R5; G6=1/R6; G7=1/R7; %calculate 
                                                                %conductances
 An=[G1,-G1      ,0  ,0 ,0 ,-G6   ,G4+G6;
     G1,-G1-G2-G3,G2 ,0 ,0 ,0     ,0    ;
     0,G2+Kb     ,-G2,0 ,0 ,0     ,0    ;
     0,Kb        ,0  ,G5,0 ,0     ,0    ;
     0,0         ,0  ,0 ,G7,-G6-G7,G6   ;
     1,0         ,0  ,0 ,0 ,0     ,-1   ;
     0,0         ,0  ,0 ,1 ,-G6*Kc,G6*Kc ];          %matrix form
 Bn=[0;0;0;Id;0;Va;0];

 Vn=An\Bn;                                           %nodal voltages array
  
 printf("Nodal_NTAB \n");                             %nodal table
 printf("$V_{1}$ = %g \n", Vn(1));                   
 printf("$V_{2}$ = %g \n", Vn(2));
 printf("$V_{3}$ = %g \n", Vn(3));
 printf("$V_{4}$ = %g \n", Vn(4));
 printf("$V_{5}$ = %g \n", Vn(5));
 printf("$V_{6}$ = %g \n", Vn(6));
 printf("$V_{7}$ = %g \n", Vn(7));
 printf("Nodal_NEND \n \n");

 printf("It is now possible to determine:\n");
 Ic_n=(Vn(7)-Vn(6))*G6;
 Vc_n=Kc*Ic_n;
 Vb_n=Vn(2);
 Ib_n=Kb*Vb_n;
 printf("ValN_MNTAB\n");                             %Vb, Ib, Vc, Ic
 printf("$V_{b}$ = %g \n", Vb_n);
 printf("$I_{b}$ = %g \n", Ib_n);
 printf("$V_{c}$ = %g \n", Vc_n);
 printf("$I_{c}$ = %g \n", Ic_n);
 printf("ValN_MNEND\n");
%voltage regulator -----------------------------------------
num_diodes = 20
von = 0.6;
	
vOreg = zeros(1, length(t));
dc_vOreg = 0;
ac_vOreg = zeros(1, length(t));
	
%dc component regulator ----------------
if average_env >= von*num_diodes
  dc_vOreg = von*num_diodes;
else
  dc_vOreg = average_env;
endif
	
  
%ac component regulator -----------------
vt = 0.025;
Is = 1e-14;
mat_sil = 1;

rd = mat_sil*vt/(Is*exp(von/(mat_sil*vt)))
ac_vOreg = num_diodes*rd/(num_diodes*rd+R2) * (vOenv-average_env);
vOreg = dc_vOreg + ac_vOreg;

%Deviations (vOenv - 12) 
hfc = figure(2);
title("Deviations from desired DC voltage")
plot (t*1000,vOenv-12, ";v4-12 (t);", t*1000,vOreg-12, ";v5-12 (t);");
xlabel ("t[ms]")
ylabel ("v_O [Volts]")
legend('Location','northeast');
print (hfc, "deviation.eps", "-depsc");
	

average_reg = mean(vOreg)
ripple_reg = max(vOreg)-min(vOreg)

printf ("regulator_TAB\n");
printf ("RippleRegulator = %e \n", ripple_reg);
printf ("AverageRegulator= %e \n", average_reg);
printf ("regulator_END\n\n");

cost = R1/1000 + R2/1000 + C*1e6 + 0.4 + num_diodes*0.1 
MERIT= 1/ (cost* (ripple_reg + abs(average_reg-12) + 10e-6))

printf ("merit_TAB\n");
printf ("Cost = %e \n", cost);
printf ("Merit= %e \n", MERIT);
printf ("merit_END\n\n");



%plots
	
%output voltages at rectifier, envelope detector and regulator
hfc = figure(1);
title("Regulator and envelope output voltage v_o(t)")
plot (t*1000, vs, ";vo_{rectifier}(t);", t*1000,v2, ";vo_{envelope}(t);", t*1000,vOreg, ";vo_{regulator}(t);");
xlabel ("t[ms]")
ylabel ("v_O [Volts]")
legend('Location','northeast');
print (hfc, "all_vout.eps", "-depsc");